# Form implementation generated from reading ui file '.\crypto.ui'
#
# Created by: PyQt6 UI code generator 6.6.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
import res_rc


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(400, 510)
        MainWindow.setMinimumSize(QtCore.QSize(400, 510))
        MainWindow.setMaximumSize(QtCore.QSize(400, 510))
        font = QtGui.QFont()
        font.setFamily("Ubuntu")
        font.setPointSize(10)
        MainWindow.setFont(font)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/res/res/icon.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setAutoFillBackground(False)
        MainWindow.setStyleSheet("")
        MainWindow.setIconSize(QtCore.QSize(32, 32))
        MainWindow.setTabShape(QtWidgets.QTabWidget.TabShape.Rounded)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.centralwidget.setStyleSheet("")
        self.centralwidget.setObjectName("centralwidget")
        self.layoutWidget = QtWidgets.QWidget(parent=self.centralwidget)
        self.layoutWidget.setGeometry(QtCore.QRect(10, 230, 381, 171))
        self.layoutWidget.setObjectName("layoutWidget")
        self.Decrypte_text = QtWidgets.QVBoxLayout(self.layoutWidget)
        self.Decrypte_text.setContentsMargins(0, 0, 0, 0)
        self.Decrypte_text.setObjectName("Decrypte_text")
        self.textEdit_2 = QtWidgets.QTextEdit(parent=self.layoutWidget)
        self.textEdit_2.setEnabled(True)
        font = QtGui.QFont()
        font.setFamily("Fira Code Medium")
        font.setPointSize(10)
        self.textEdit_2.setFont(font)
        self.textEdit_2.setToolTip("")
        self.textEdit_2.setStatusTip("")
        self.textEdit_2.setAccessibleName("")
        self.textEdit_2.setAccessibleDescription("")
        self.textEdit_2.setStyleSheet("QTextEdit { \n"
"border: 1px solid gray; \n"
"}")
        self.textEdit_2.setLineWrapColumnOrWidth(0)
        self.textEdit_2.setReadOnly(True)
        self.textEdit_2.setAcceptRichText(True)
        self.textEdit_2.setObjectName("textEdit_2")
        self.Decrypte_text.addWidget(self.textEdit_2)
        self.layoutWidget1 = QtWidgets.QWidget(parent=self.centralwidget)
        self.layoutWidget1.setGeometry(QtCore.QRect(10, 410, 381, 52))
        self.layoutWidget1.setObjectName("layoutWidget1")
        self.Buttons = QtWidgets.QHBoxLayout(self.layoutWidget1)
        self.Buttons.setContentsMargins(0, 0, 0, 0)
        self.Buttons.setObjectName("Buttons")
        self.button_decrypt = QtWidgets.QPushButton(parent=self.layoutWidget1)
        self.button_decrypt.setEnabled(True)
        self.button_decrypt.setMinimumSize(QtCore.QSize(0, 50))
        font = QtGui.QFont()
        font.setFamily("Segoe UI Semibold")
        font.setPointSize(9)
        font.setBold(True)
        font.setItalic(False)
        self.button_decrypt.setFont(font)
        self.button_decrypt.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.button_decrypt.setStyleSheet("QPushButton { \n"
"border: 1px solid gray; border-radius: 5px;\n"
"}\n"
"QPushButton:hover { \n"
"border-color: #6dad77;\n"
"}\n"
"QPushButton:checked { \n"
"background-color: #6dad77; border: 1px solid black; \n"
"}")
        self.button_decrypt.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/res/res/decrypt.svg"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.button_decrypt.setIcon(icon1)
        self.button_decrypt.setIconSize(QtCore.QSize(35, 35))
        self.button_decrypt.setCheckable(True)
        self.button_decrypt.setChecked(False)
        self.button_decrypt.setObjectName("button_decrypt")
        self.Buttons.addWidget(self.button_decrypt)
        self.button_encrypt = QtWidgets.QPushButton(parent=self.layoutWidget1)
        self.button_encrypt.setMinimumSize(QtCore.QSize(0, 50))
        self.button_encrypt.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.button_encrypt.setStyleSheet("QPushButton { \n"
"border: 1px solid gray; border-radius: 5px;\n"
"}\n"
"QPushButton:hover { \n"
"border-color: #6dad77;\n"
"}\n"
"QPushButton:checked { \n"
"background-color: #6dad77; border: 1px solid black; \n"
"}")
        self.button_encrypt.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/res/res/encrypt.svg"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.button_encrypt.setIcon(icon2)
        self.button_encrypt.setIconSize(QtCore.QSize(35, 35))
        self.button_encrypt.setShortcut("")
        self.button_encrypt.setCheckable(True)
        self.button_encrypt.setChecked(False)
        self.button_encrypt.setObjectName("button_encrypt")
        self.Buttons.addWidget(self.button_encrypt)
        self.button_chef = QtWidgets.QPushButton(parent=self.layoutWidget1)
        self.button_chef.setMinimumSize(QtCore.QSize(0, 50))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(10)
        font.setBold(True)
        font.setItalic(False)
        self.button_chef.setFont(font)
        self.button_chef.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.button_chef.setWhatsThis("")
        self.button_chef.setAccessibleDescription("")
        self.button_chef.setStyleSheet("QPushButton { \n"
"border: 1px solid gray; border-radius: 5px;\n"
"}\n"
"QPushButton:hover { \n"
"border-color: #6dad77;\n"
"}\n"
"QPushButton:checked { \n"
"background-color: #6dad77; border: 1px solid black; \n"
"}")
        self.button_chef.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/res/res/duck.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.button_chef.setIcon(icon3)
        self.button_chef.setIconSize(QtCore.QSize(40, 40))
        self.button_chef.setObjectName("button_chef")
        self.Buttons.addWidget(self.button_chef)
        self.textEdit = QtWidgets.QTextEdit(parent=self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(11, 44, 380, 176))
        font = QtGui.QFont()
        font.setFamily("Fira Code Medium")
        font.setPointSize(10)
        self.textEdit.setFont(font)
        self.textEdit.setContextMenuPolicy(QtCore.Qt.ContextMenuPolicy.DefaultContextMenu)
        self.textEdit.setToolTip("")
        self.textEdit.setStyleSheet("QTextEdit { \n"
"border: 1px solid gray; \n"
"}")
        self.textEdit.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.textEdit.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.textEdit.setLineWidth(1)
        self.textEdit.setDocumentTitle("")
        self.textEdit.setObjectName("textEdit")
        self.comboBox = QtWidgets.QComboBox(parent=self.centralwidget)
        self.comboBox.setGeometry(QtCore.QRect(261, 10, 130, 27))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(11)
        font.setBold(False)
        self.comboBox.setFont(font)
        self.comboBox.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.comboBox.setStyleSheet("QComboBox { \n"
"border: 1px solid gray; border-radius: 5px;\n"
"}\n"
"QComboBox:hover { \n"
"border-color: #6dad77;\n"
"}")
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.input_text_lbl = QtWidgets.QLabel(parent=self.centralwidget)
        self.input_text_lbl.setGeometry(QtCore.QRect(10, 8, 151, 31))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        font.setBold(False)
        self.input_text_lbl.setFont(font)
        self.input_text_lbl.setObjectName("input_text_lbl")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menuBar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 400, 22))
        font = QtGui.QFont()
        font.setFamily("Hack NF")
        font.setPointSize(10)
        self.menuBar.setFont(font)
        self.menuBar.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.menuBar.setObjectName("menuBar")
        self.menuAbout = QtWidgets.QMenu(parent=self.menuBar)
        font = QtGui.QFont()
        font.setFamily("Hack NF")
        font.setPointSize(9)
        self.menuAbout.setFont(font)
        self.menuAbout.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.menuAbout.setTearOffEnabled(False)
        self.menuAbout.setSeparatorsCollapsible(False)
        self.menuAbout.setToolTipsVisible(False)
        self.menuAbout.setObjectName("menuAbout")
        self.menuFile = QtWidgets.QMenu(parent=self.menuBar)
        font = QtGui.QFont()
        font.setFamily("Hack NF")
        font.setPointSize(10)
        self.menuFile.setFont(font)
        self.menuFile.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.menuFile.setObjectName("menuFile")
        MainWindow.setMenuBar(self.menuBar)
        self.statusBar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusBar.setObjectName("statusBar")
        MainWindow.setStatusBar(self.statusBar)
        self.action_about = QtGui.QAction(parent=MainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/res/res/about.svg"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.action_about.setIcon(icon4)
        font = QtGui.QFont()
        font.setFamily("Hack NF")
        self.action_about.setFont(font)
        self.action_about.setObjectName("action_about")
        self.action_open = QtGui.QAction(parent=MainWindow)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/res/res/open.svg"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.action_open.setIcon(icon5)
        self.action_open.setObjectName("action_open")
        self.action_save = QtGui.QAction(parent=MainWindow)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/res/res/save.svg"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.action_save.setIcon(icon6)
        self.action_save.setObjectName("action_save")
        self.action_theme = QtGui.QAction(parent=MainWindow)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/res/res/theme.svg"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.action_theme.setIcon(icon7)
        self.action_theme.setObjectName("action_theme")
        self.menuAbout.addAction(self.action_theme)
        self.menuAbout.addAction(self.action_about)
        self.menuFile.addAction(self.action_open)
        self.menuFile.addAction(self.action_save)
        self.menuBar.addAction(self.menuFile.menuAction())
        self.menuBar.addAction(self.menuAbout.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Crypto Box"))
        MainWindow.setWhatsThis(_translate("MainWindow", "Easter egg here!"))
        self.textEdit_2.setPlaceholderText(_translate("MainWindow", "нажмите кнопку, чтобы увидеть результат"))
        self.textEdit.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"hr { height: 1px; border-width: 0; }\n"
"li.unchecked::marker { content: \"\\2610\"; }\n"
"li.checked::marker { content: \"\\2612\"; }\n"
"</style></head><body style=\" font-family:\'Fira Code Medium\'; font-size:10pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.textEdit.setPlaceholderText(_translate("MainWindow", "введите текст ..."))
        self.comboBox.setItemText(0, _translate("MainWindow", "Base64"))
        self.comboBox.setItemText(1, _translate("MainWindow", "Base32"))
        self.comboBox.setItemText(2, _translate("MainWindow", "HEX"))
        self.comboBox.setItemText(3, _translate("MainWindow", "URL"))
        self.comboBox.setItemText(4, _translate("MainWindow", "ROT13"))
        self.comboBox.setItemText(5, _translate("MainWindow", "MD5"))
        self.comboBox.setItemText(6, _translate("MainWindow", "SHA1"))
        self.comboBox.setItemText(7, _translate("MainWindow", "SHA256"))
        self.comboBox.setItemText(8, _translate("MainWindow", "SHA512"))
        self.input_text_lbl.setText(_translate("MainWindow", "Выберите алгоритм"))
        self.menuAbout.setTitle(_translate("MainWindow", "Настройки"))
        self.menuFile.setTitle(_translate("MainWindow", "Файл"))
        self.action_about.setText(_translate("MainWindow", "Об авторе"))
        self.action_open.setText(_translate("MainWindow", "Открыть"))
        self.action_save.setText(_translate("MainWindow", "Сохранить"))
        self.action_theme.setText(_translate("MainWindow", "Сменить тему"))
